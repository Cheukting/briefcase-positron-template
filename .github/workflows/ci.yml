name: CI

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.X"
    - name: Install dependencies
      run: |
        python -m pip install tox
    - name: Test with tox
      run: |
        tox

  verify-apps:
    name: Build apps
    needs: unit-tests
    strategy:
      matrix:
        os_name: ["macOS", "windows", "linux"]
        framework: ["toga", "pyside2", "pyside6", "ppb"]
        include:
        - os_name: macOS
          platform: macos-12
          briefcase-data-dir: ~/Library/Caches/org.beeware.briefcase
          pip-cache-dir: ~/Library/Caches/pip
          docker-cache-dir: ~/Library/Containers/com.docker.docker/Data/vms/0/
        - os_name: windows
          platform: windows-latest
          briefcase-data-dir: ~\AppData\Local\BeeWare\briefcase\Cache
          pip-cache-dir: ~\AppData\Local\pip\Cache
          docker-cache-dir: C:\ProgramData\DockerDesktop
        - os_name: linux
          # Need to use at least 22.04 to get the bugfix in flatpak for handling spaces in filenames.
          platform: ubuntu-22.04
          briefcase-data-dir: ~/.cache/briefcase
          pip-cache-dir: ~/.cache/pip
          # cache action cannot cache docker images (actions/cache#31)
          # docker-cache-dir: /var/lib/docker
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Cache Briefcase tools
      uses: actions/cache@v3.2.2
      with:
        key: briefcase-${{ matrix.platform }}
        path: |
          ~/.cookiecutters
          ${{ matrix.briefcase-data-dir }}
          ${{ matrix.pip-cache-dir }}
          ${{ matrix.docker-cache-dir }}
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"
    - name: Install system dependencies
      if: matrix.platform == 'ubuntu-22.04'
      run: |
        sudo apt-get install -y flatpak flatpak-builder
    - name: Install Briefcase
      run: python -m pip install git+https://github.com/beeware/briefcase.git
    - name: Create App
      run: |
        cd tests/apps
        cat verify-${{ matrix.framework }}.config | briefcase new --template ../../
    - name: Build App
      run: |
        cd tests/apps/verify-${{ matrix.framework }}
        briefcase create
        briefcase build
        briefcase package --adhoc-sign
    - name: Build Xcode project
      if: matrix.os_name == 'macOS'
      run: |
        cd tests/apps/verify-${{ matrix.framework }}
        briefcase create ${{ matrix.os_name }} Xcode
        briefcase build ${{ matrix.os_name }} Xcode
        briefcase package ${{ matrix.os_name }} Xcode --adhoc-sign
    - name: Build Visual Studio project
      if: matrix.os_name == 'windows'
      run: |
        cd tests/apps/verify-${{ matrix.framework }}
        briefcase create ${{ matrix.os_name }} VisualStudio
        briefcase build ${{ matrix.os_name }} VisualStudio
        briefcase package ${{ matrix.os_name }} VisualStudio --adhoc-sign
    - name: Build Flatpak project
      if: matrix.os_name == 'linux' && matrix.framework == 'toga'
      run: |
        cd tests/apps/verify-${{ matrix.framework }}
        briefcase create ${{ matrix.os_name }} flatpak
        briefcase build ${{ matrix.os_name }} flatpak
        briefcase package ${{ matrix.os_name }} flatpak --adhoc-sign
    - name: Build Android App
      if: matrix.framework == 'toga'
      run: |
        cd tests/apps/verify-${{ matrix.framework }}
        briefcase create android
        briefcase build android
        briefcase package android --adhoc-sign
    - name: Build iOS App
      if: matrix.platform == 'macos-12' && matrix.framework == 'toga'
      run: |
        cd tests/apps/verify-${{ matrix.framework }}
        briefcase create iOS
        briefcase build iOS
        briefcase package iOS --adhoc-sign
    - name: Build Web App
      if: matrix.framework == 'toga'
      run: |
        cd tests/apps/verify-${{ matrix.framework }}
        briefcase create web
        briefcase build web
        briefcase package web
